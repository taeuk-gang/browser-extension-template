/**
 * Do not edit directly
 * Generated on Fri, 09 Jun 2023 17:35:51 GMT
 */

/**
 * @description hex string (6 or 8-digit)
 */
type ColorHex = string;

/**
 * @description a css shadow
 * @format inset? | offset-x | offset-y | blur-radius? | spread-radius? | color?
 */
type Shadow = string;

/**
 * @description a css border string
 * @format color | style | width
 */
type Border = `${ColorHex} ${string} ${string}`;

export type ThemeDesignTokens = {
  topicTag: {
    borderColor: ColorHex;
  };
  highlight: {
    neutral: {
      bgColor: ColorHex;
    };
  };
  page: {
    header: {
      bgColor: ColorHex;
    };
  };
  diffBlob: {
    addition: {
      fgColor: {
        text: ColorHex;
        num: ColorHex;
      };
      bgColor: {
        num: ColorHex;
        line: ColorHex;
        word: ColorHex;
      };
    };
    deletion: {
      fgColor: {
        text: ColorHex;
        num: ColorHex;
      };
      bgColor: {
        num: ColorHex;
        line: ColorHex;
        word: ColorHex;
      };
    };
    hunk: {
      bgColor: {
        num: ColorHex;
      };
    };
    expander: {
      iconColor: ColorHex;
    };
  };
  diffStat: {
    addition: {
      bgColor: ColorHex;
    };
  };
  codeMirror: {
    fgColor: ColorHex;
    bgColor: ColorHex;
    gutters: {
      bgColor: ColorHex;
    };
    gutterMarker: {
      fgColor: {
        default: ColorHex;
        muted: ColorHex;
      };
    };
    lineNumber: {
      fgColor: ColorHex;
    };
    cursor: {
      fgColor: ColorHex;
    };
    selection: {
      bgColor: ColorHex;
    };
    activeline: {
      bgColor: ColorHex;
    };
    matchingBracket: {
      fgColor: ColorHex;
    };
    lines: {
      bgColor: ColorHex;
    };
    syntax: {
      fgColor: {
        comment: ColorHex;
        constant: ColorHex;
        entity: ColorHex;
        keyword: ColorHex;
        storage: ColorHex;
        string: ColorHex;
        support: ColorHex;
        variable: ColorHex;
      };
    };
  };
  header: {
    fgColor: {
      default: ColorHex;
      logo: ColorHex;
    };
    bgColor: ColorHex;
    borderColor: {
      divider: ColorHex;
    };
  };
  headerSearch: {
    bgColor: ColorHex;
    borderColor: ColorHex;
  };
  avatar: {
    bgColor: ColorHex;
    borderColor: ColorHex;
    shadow: Shadow;
  };
  avatarStack: {
    fade: {
      bgColor: {
        default: ColorHex;
        muted: ColorHex;
      };
    };
  };
  control: {
    bgColor: {
      rest: ColorHex;
      hover: ColorHex;
      active: ColorHex;
      disabled: ColorHex;
      selected: ColorHex;
    };
    fgColor: {
      rest: ColorHex;
      placeholder: ColorHex;
      disabled: ColorHex;
    };
    borderColor: {
      rest: ColorHex;
      emphasis: ColorHex;
      disabled: ColorHex;
      selected: ColorHex;
      success: ColorHex;
      danger: ColorHex;
      warning: ColorHex;
    };
    iconColor: {
      rest: ColorHex;
    };
    transparent: {
      bgColor: {
        rest: ColorHex;
        hover: ColorHex;
        active: ColorHex;
        disabled: ColorHex;
        selected: ColorHex;
      };
      borderColor: {
        rest: ColorHex;
        hover: ColorHex;
        active: ColorHex;
      };
    };
    danger: {
      fgColor: {
        rest: ColorHex;
        hover: ColorHex;
      };
      bgColor: {
        hover: ColorHex;
        active: ColorHex;
      };
    };
    checked: {
      bgColor: {
        rest: ColorHex;
        hover: ColorHex;
        active: ColorHex;
        disabled: ColorHex;
      };
      fgColor: {
        rest: ColorHex;
        disabled: ColorHex;
      };
      borderColor: {
        rest: ColorHex;
        hover: ColorHex;
        active: ColorHex;
        disabled: ColorHex;
      };
    };
  };
  controlTrack: {
    bgColor: {
      rest: ColorHex;
      hover: ColorHex;
      active: ColorHex;
      disabled: ColorHex;
    };
    fgColor: {
      rest: ColorHex;
      disabled: ColorHex;
    };
    borderColor: {
      rest: ColorHex;
      disabled: ColorHex;
    };
  };
  controlKnob: {
    bgColor: {
      rest: ColorHex;
      disabled: ColorHex;
      checked: ColorHex;
    };
    borderColor: {
      rest: ColorHex;
      disabled: ColorHex;
      checked: ColorHex;
    };
  };
  counter: {
    borderColor: ColorHex;
  };
  button: {
    default: {
      fgColor: {
        rest: ColorHex;
      };
      bgColor: {
        rest: ColorHex;
        hover: ColorHex;
        active: ColorHex;
        selected: ColorHex;
      };
      borderColor: {
        rest: ColorHex;
        hover: ColorHex;
        active: ColorHex;
      };
      shadow: {
        resting: Shadow;
        inset: Shadow;
      };
    };
    primary: {
      fgColor: {
        rest: ColorHex;
        disabled: ColorHex;
      };
      iconColor: {
        rest: ColorHex;
      };
      bgColor: {
        rest: ColorHex;
        hover: ColorHex;
        active: ColorHex;
        disabled: ColorHex;
      };
      borderColor: {
        rest: ColorHex;
        hover: ColorHex;
        disabled: ColorHex;
      };
      shadow: {
        selected: Shadow;
      };
    };
    invisible: {
      fgColor: {
        rest: ColorHex;
        hover: ColorHex;
        disabled: ColorHex;
      };
      bgColor: {
        rest: ColorHex;
        hover: ColorHex;
        active: ColorHex;
        disabled: ColorHex;
      };
      borderColor: {
        rest: ColorHex;
        hover: ColorHex;
      };
    };
    outline: {
      fgColor: {
        rest: ColorHex;
        hover: ColorHex;
        active: ColorHex;
        disabled: ColorHex;
      };
      bgColor: {
        rest: ColorHex;
        hover: ColorHex;
        active: ColorHex;
        disabled: ColorHex;
      };
      borderColor: {
        hover: ColorHex;
        active: ColorHex;
      };
      shadow: {
        selected: Shadow;
      };
    };
    danger: {
      fgColor: {
        rest: ColorHex;
        hover: ColorHex;
        active: ColorHex;
        disabled: ColorHex;
      };
      iconColor: {
        rest: ColorHex;
        hover: ColorHex;
      };
      bgColor: {
        rest: ColorHex;
        hover: ColorHex;
        active: ColorHex;
        disabled: ColorHex;
      };
      borderColor: {
        rest: ColorHex;
        hover: ColorHex;
        active: ColorHex;
      };
      shadow: {
        selected: Shadow;
      };
    };
  };
  buttonCounter: {
    default: {
      bgColor: {
        rest: ColorHex;
      };
    };
    invisible: {
      bgColor: {
        rest: ColorHex;
      };
    };
    primary: {
      bgColor: {
        rest: ColorHex;
      };
    };
    outline: {
      bgColor: {
        rest: ColorHex;
        hover: ColorHex;
        disabled: ColorHex;
      };
      fgColor: {
        rest: ColorHex;
        hover: ColorHex;
        disabled: ColorHex;
      };
    };
    danger: {
      bgColor: {
        hover: ColorHex;
        disabled: ColorHex;
        rest: ColorHex;
      };
      fgColor: {
        rest: ColorHex;
        hover: ColorHex;
        disabled: ColorHex;
      };
    };
  };
  focus: {
    outlineColor: ColorHex;
    outline: Border;
  };
  menu: {
    bgColor: {
      active: ColorHex;
    };
  };
  overlay: {
    bgColor: ColorHex;
    backdrop: {
      bgColor: ColorHex;
    };
  };
  selectMenu: {
    borderColor: ColorHex;
    bgColor: {
      active: ColorHex;
    };
  };
  sideNav: {
    bgColor: {
      selected: ColorHex;
    };
  };
  timelineBadge: {
    bgColor: ColorHex;
  };
  treeViewItem: {
    leadingVisual: {
      bgColor: {
        rest: ColorHex;
      };
    };
  };
  underlineNav: {
    borderColor: {
      active: ColorHex;
      hover: ColorHex;
    };
    iconColor: {
      rest: ColorHex;
    };
  };
  fgColor: {
    default: ColorHex;
    muted: ColorHex;
    onEmphasis: ColorHex;
    disabled: ColorHex;
    link: {
      rest: ColorHex;
    };
    accent: ColorHex;
    success: ColorHex;
    attention: ColorHex;
    severe: ColorHex;
    danger: ColorHex;
    open: ColorHex;
    closed: ColorHex;
    done: ColorHex;
    sponsors: ColorHex;
  };
  bgColor: {
    default: ColorHex;
    muted: ColorHex;
    emphasis: ColorHex;
    disabled: ColorHex;
    transparent: ColorHex;
    neutral: {
      muted: ColorHex;
      emphasis: ColorHex;
    };
    accent: {
      muted: ColorHex;
      emphasis: ColorHex;
    };
    success: {
      muted: ColorHex;
      emphasis: ColorHex;
    };
    attention: {
      muted: ColorHex;
      emphasis: ColorHex;
    };
    severe: {
      muted: ColorHex;
      emphasis: ColorHex;
    };
    danger: {
      muted: ColorHex;
      emphasis: ColorHex;
    };
    open: {
      muted: ColorHex;
      emphasis: ColorHex;
    };
    closed: {
      muted: ColorHex;
      emphasis: ColorHex;
    };
    done: {
      muted: ColorHex;
      emphasis: ColorHex;
    };
    sponsors: {
      muted: ColorHex;
      emphasis: ColorHex;
    };
  };
  borderColor: {
    default: ColorHex;
    muted: ColorHex;
    emphasis: ColorHex;
    disabled: ColorHex;
    transparent: ColorHex;
    neutral: {
      muted: ColorHex;
      emphasis: ColorHex;
    };
    accent: {
      muted: ColorHex;
      emphasis: ColorHex;
    };
    success: {
      muted: ColorHex;
      emphasis: ColorHex;
    };
    attention: {
      muted: ColorHex;
      emphasis: ColorHex;
    };
    severe: {
      muted: ColorHex;
      emphasis: ColorHex;
    };
    danger: {
      muted: ColorHex;
      emphasis: ColorHex;
    };
    open: {
      muted: ColorHex;
      emphasis: ColorHex;
    };
    closed: {
      muted: ColorHex;
      emphasis: ColorHex;
    };
    done: {
      muted: ColorHex;
      emphasis: ColorHex;
    };
    sponsors: {
      muted: ColorHex;
      emphasis: ColorHex;
    };
  };
  color: {
    ansi: {
      black: ColorHex;
      "black-bright": ColorHex;
      white: ColorHex;
      "white-bright": ColorHex;
      gray: ColorHex;
      red: ColorHex;
      "red-bright": ColorHex;
      green: ColorHex;
      "green-bright": ColorHex;
      yellow: ColorHex;
      "yellow-bright": ColorHex;
      blue: ColorHex;
      "blue-bright": ColorHex;
      magenta: ColorHex;
      "magenta-bright": ColorHex;
      cyan: ColorHex;
      "cyan-bright": ColorHex;
    };
    prettylights: {
      syntax: {
        comment: ColorHex;
        constant: ColorHex;
        "constant-other-reference-link": ColorHex;
        entity: ColorHex;
        storage: {
          modifier: {
            import: ColorHex;
          };
        };
        "entity-tag": ColorHex;
        keyword: ColorHex;
        string: ColorHex;
        variable: ColorHex;
        brackethighlighter: {
          unmatched: ColorHex;
          angle: ColorHex;
        };
        invalid: {
          illegal: {
            text: ColorHex;
            bg: ColorHex;
          };
        };
        carriage: {
          return: {
            text: ColorHex;
            bg: ColorHex;
          };
        };
        "string-regexp": ColorHex;
        markup: {
          list: ColorHex;
          heading: ColorHex;
          italic: ColorHex;
          bold: ColorHex;
          deleted: {
            text: ColorHex;
            bg: ColorHex;
          };
          inserted: {
            text: ColorHex;
            bg: ColorHex;
          };
          changed: {
            text: ColorHex;
            bg: ColorHex;
          };
          ignored: {
            text: ColorHex;
            bg: ColorHex;
          };
        };
        meta: {
          diff: {
            range: ColorHex;
          };
        };
        sublimelinter: {
          gutter: {
            mark: ColorHex;
          };
        };
      };
    };
  };
  shadow: {
    inset: Shadow;
    highlight: Shadow;
    resting: {
      xsmall: Shadow;
      small: Shadow;
      medium: Shadow;
    };
    floating: {
      small: Shadow;
      medium: Shadow;
      large: Shadow;
      xlarge: Shadow;
    };
  };
};
